-- MLB Autos y Camionetas: atribución por usuario contactando   
  
  DECLARE fecha_desde DATE DEFAULT '2023-07-01'
  ;
  DECLARE fecha_hasta DATE DEFAULT '2023-12-01'-1
  ;

  DECLARE cat_l2 INT64 DEFAULT 1744; -- autos y camionetas

  DECLARE var_sites ARRAY <STRING>;

  DECLARE var_vertical ARRAY <STRING>;

  SET var_sites = ['MLB']
  ;

  SET var_vertical = ['1743']
  ;

  WITH A AS
    (
      SELECT 
          (CASE WHEN B.cat_categ_id_l1 = '1459' THEN 'real estate' WHEN B.cat_categ_id_l1 = '1743' THEN 'motors' WHEN B.cat_categ_id_l1 = '1540' THEN 'services' END) AS vertical

        , `meli-bi-data.SBOX_MKTVIS`.fx_imre_operation(F.ite_item_dom_domain_id,F.operation) AS real_estate_operation
        , `meli-bi-data.SBOX_MKTVIS`.fx_imm_ayc_and_others(E.cat_categ_name_l2) AS motors_ayc

        , DATE_TRUNC(A.LEAD_CREATED_DT, YEAR) AS year
        , DATE_TRUNC(A.LEAD_CREATED_DT, QUARTER) AS quarter
        , DATE_TRUNC(A.LEAD_CREATED_DT, MONTH) AS month
        , DATE_TRUNC(A.LEAD_CREATED_DT, ISOWEEK) AS week
        , DATE_TRUNC(A.LEAD_CREATED_DT, DAY) AS date

        , `meli-bi-data.SBOX_MKTVIS`.fx_grouped_attribution(C.ite_quot_source,B.mapp_app_id,H.matt_vertical,H.matt_campaign_type,H.matt_implementation_channel,A.matt_type_source,A.matt_stimulus_source_type,A.matt_strategy,A.matt_source,A.matt_channel,H.matt_tool) AS grouped_attribution


        , `meli-bi-data.SBOX_MKTVIS`.fx_pom_vis_subgroup(C.ite_quot_source,B.mapp_app_id,H.matt_vertical,H.matt_campaign_type,H.matt_implementation_channel,A.matt_type_source,A.matt_stimulus_source_type,A.matt_strategy,A.matt_source,A.matt_channel,H.matt_implementation_source,H.matt_implementation,H.matt_tool) AS POM_VIS_subgroup

        , `meli-bi-data.SBOX_MKTVIS`.fx_pom_vis_tool_id(C.ite_quot_source,B.mapp_app_id,H.matt_vertical,H.matt_campaign_type,H.matt_implementation_channel,A.matt_type_source,A.matt_stimulus_source_type,A.matt_strategy,A.matt_source,A.matt_channel,H.matt_implementation_source,H.matt_implementation,H.matt_tool) AS POM_VIS_tool_id

        , `meli-bi-data.SBOX_MKTVIS`.fx_matt_vertical_desvio(C.ite_quot_source,B.mapp_app_id,H.matt_vertical,H.matt_campaign_type,H.matt_implementation_channel,A.matt_type_source,A.matt_stimulus_source_type,A.matt_strategy,A.matt_source,A.matt_channel,H.matt_implementation_source,H.matt_implementation,H.matt_tool,B.cat_categ_id_l1) AS matt_vertical_desvio
        
        , (CASE WHEN A.CUS_CUST_ID_BUY IS NOT NULL THEN 'logged' ELSE 'not logged' END) AS is_logged
        , COALESCE(CAST(A.CUS_CUST_ID_BUY AS STRING), B.SESSION_ID)  AS contact_user
        , A.*


      FROM `growth-attribution.production.BT_MATT_ATTRIBUTION_LEADS` AS A


      -- para joinear con fuente de dónde MATT toma leads de questions, call, whatsapp y quotation
      LEFT JOIN `meli-bi-data.WHOWNER.BT_CONTACTS_CLASSIFIEDS` AS B
      ON A.lead_id = B.id

      -- para tener info extra de quotations. FB FORMS = ITE_QUOT_SOURCE IN ('facebook')
      LEFT JOIN `meli-bi-data.WHOWNER.BT_ITE_QUOTATION` AS C
      ON CAST(B.EXTERNAL_ENTITY_ID AS STRING) = CAST(C.ITE_QUOTATION_ID AS STRING)

      -- para tener info extra de questions. FB FORMS = QUESTION_APP_ID IN (6606988212253970,6557539776310564)
      LEFT JOIN `meli-bi-data.WHOWNER.BT_ITEM_QUESTIONS` AS D
      ON CAST(B.EXTERNAL_ENTITY_ID AS STRING) = CAST(D.QUES_ID AS STRING)

      -- para tener arbol de categorias
      LEFT JOIN `meli-bi-data.WHOWNER.AG_LK_CAT_CATEGORIES` AS E 
      ON E.CAT_CATEG_ID_L7 = CAST(B.CAT_CATEG_ID_L7 AS INTEGER)
      AND E.SIT_SITE_ID = B.SIT_SITE_ID

      -- para joinear con atributos de anuncio real estate
      LEFT JOIN `meli-bi-data.SBOX_CLASSI_PLANNING.LK_ATRIBUTOS_IMRE` AS F
      ON CAST(A.lead_item_id AS STRING) = CAST(F.ite_item_id AS STRING)
      AND A.sit_site_id = F.sit_site_id

      -- para joinear con atributos de anuncio motors
      LEFT JOIN `meli-bi-data.SBOX_CLASSI_PLANNING.LK_ATRIBUTOS_IMM_IMS` AS G
      ON CAST(A.lead_item_id AS STRING) = CAST(G.ite_item_id AS STRING)
      AND A.sit_site_id = G.sit_site_id

      -- para joinear con datos de cada tool id existente en el matt admin
      LEFT JOIN `meli-bi-data.WHOWNER.BT_MATT_METADATA` AS H
      ON A.pms_tool_id = H.matt_tool
      AND H.matt_business_unit = 'VIS' -- solo tool ids de VIS
      AND H.tim_day = CURRENT_DATE -- para traer el listado actualizado sin duplicar informacion


      WHERE A.LEAD_CREATED_DT BETWEEN fecha_desde AND fecha_hasta
      AND LEAD_ATTRIBUTION_TYPE = 'VIS' -- para tener metricas relacionadas a VIS (en la tabla convive otra BU)
      AND LEAD_TYPE IN ('Quotation','Question','Click to Whatsapp','Click to Call') -- por el momento truncar en estos leads porque los de simulacion de crédito necesitan un cambio que todavía está pending por parte de MATT IT
      AND A.sit_site_id IN UNNEST(var_sites)
      AND B.cat_categ_id_l1 IN UNNEST(var_vertical) -- solo real estate y motors (para no traer services) 
      AND E.CAT_CATEG_ID_L2 = cat_l2

    )

  , B AS
    (
      SELECT DISTINCT
        sit_site_id
      , vertical
      , month
      , is_logged
      , contact_user
      -- aca elegir la granularidad de agrupacion: pms_tool_id o grouped_attribution
      , grouped_attribution
      , POM_VIS_subgroup
      , POM_VIS_tool_id
      -- , matt_vertical_desvio


      -- se crean las distribuciones por usuarios unicos. Nota: si se agregan más metricas, el número da distinto
      , SAFE_DIVIDE(SUM(MATT_PORC_FIRST_CLICK) OVER (PARTITION BY sit_site_id,vertical,month,is_logged,contact_user,    grouped_attribution,POM_VIS_subgroup,POM_VIS_tool_id )
                  , SUM(MATT_PORC_FIRST_CLICK) OVER (PARTITION BY sit_site_id,vertical,month,is_logged,contact_user) ) AS ditribucion_usuarios_unicos_first_click

      , SAFE_DIVIDE(SUM(MATT_PORC_LAST_CLICK) OVER (PARTITION BY sit_site_id,vertical,month, is_logged,contact_user,    grouped_attribution,POM_VIS_subgroup,POM_VIS_tool_id )
                  , SUM(MATT_PORC_LAST_CLICK) OVER (PARTITION BY sit_site_id,vertical,month, is_logged,contact_user ) ) AS ditribucion_usuarios_unicos_last_click

      , SAFE_DIVIDE(SUM(MATT_PORC_LINEAL) OVER (PARTITION BY sit_site_id,vertical,month,is_logged,contact_user,    grouped_attribution,POM_VIS_subgroup,POM_VIS_tool_id )
                  , SUM(MATT_PORC_LINEAL) OVER (PARTITION BY sit_site_id,vertical,month,is_logged,contact_user ) ) AS ditribucion_usuarios_unicos_lineal

      , SAFE_DIVIDE(SUM(MATT_PORC_TIMEDECAY) OVER (PARTITION BY sit_site_id,vertical,month,is_logged,contact_user,    grouped_attribution,POM_VIS_subgroup,POM_VIS_tool_id )
                  , SUM(MATT_PORC_TIMEDECAY) OVER (PARTITION BY sit_site_id,vertical,month,is_logged,contact_user ) ) AS ditribucion_usuarios_unicos_timedecay



      FROM A
    )

  SELECT B.* EXCEPT(contact_user,ditribucion_usuarios_unicos_first_click,ditribucion_usuarios_unicos_last_click,ditribucion_usuarios_unicos_lineal,ditribucion_usuarios_unicos_timedecay)
  -- , COUNT(DISTINCT contact_user) AS contact_user
  , SUM(ditribucion_usuarios_unicos_first_click) AS contact_user_first_click
  , SUM(ditribucion_usuarios_unicos_last_click) AS contact_user_last_click
  , SUM(ditribucion_usuarios_unicos_lineal) AS contact_user_lineal
  , SUM(ditribucion_usuarios_unicos_timedecay) AS contact_user_timedecay



  FROM B

  GROUP BY 1,2,3,4,5,6,7
  ORDER BY 1,2,3,4,5,6,7
  ;
